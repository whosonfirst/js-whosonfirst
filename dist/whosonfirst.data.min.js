var whosonfirst=whosonfirst||{};whosonfirst.data=function(){var t=3e4,e={fetchWithEndpoints:function(t,n,s){return new Promise((o,i)=>{(async()=>{const r=t.length;for(var a=0;a<r;a++){const i=t[a],c=i+n;console.debug("Fetch with endpoint",i,n);try{const t=await e.fetch(c,s);o({data:t,endpoint:i});return}catch(e){console.error("Failed to fetch",c,e)}}i(new Error("All fetch attempts failed"))})()})},fetch:function(n,s){return new Promise((o,i)=>{if(typeof s=="undefined"?s={}:typeof s=="number"&&(s={cache_ttl:s}),s.cache_ttl)var a=s.cache_ttl;else a=t;e.cache_get(n,a).then(e=>{o(e)}).catch(t=>{if(console.debug("Failed to retrieve cache data",n,t),s["cache-busting"]){var r=Math.floor(Math.random()*1e6),a=document.createElement("a");a.href=n,a.search?a.search+="&cb="+r:a.search="?cb= "+r,n=a.href}fetch(n).then(e=>e.json()).then(t=>{e.cache_set(n,t).catch(e=>{console.error("Failed to cache URL",n,e)}),o(t)}).catch(e=>{console.error("Failed to fetch URI",n,e),i(e)})})})},cache_get:function(t,n){return new Promise((s,o)=>{if(typeof localforage!="object"){o("Missing local forage");return}var i=e.cache_prep_key(t);localforage.getItem(i,function(i,a){if(i||!a){o(i);return}var c,l,d,u,r=a.data;if(!r){o();return}if(c=new Date,l=c.getTime(),d=a.created,u=l-d,u>n){e.cache_unset(t).catch(e=>{console.error("Failed to set cache key",t,e)}),o();return}s(r)})})},cache_set:function(t,n){return new Promise((s,o)=>{if(typeof localforage!="object"){o("Missing localforage");return}var i=new Date,a=i.getTime(),r={data:n,created:a};t=e.cache_prep_key(t),localforage.setItem(t,r),s()})},cache_unset:function(t){return new Promise((n,s)=>{if(typeof localforage!="object"){s("Missing localforage");return}t=e.cache_prep_key(t),localforage.removeItem(t),n()})},cache_prep_key:function(e){return e+"#whosonfirst.data"}};return e}()